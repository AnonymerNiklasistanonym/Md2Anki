# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    strategy:
      matrix:
        os-version: [ubuntu-latest]
        python-version: [3.11]

    runs-on: ${{ matrix.os-version }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Check if it can be run without errors
      run: |
        python "src/md2anki/md2anki.py" --version
        python "src/md2anki/md2anki.py" --help
    - name: Check if it can be run without errors using the run scripts
      run: |
        ./run.sh --version
        ./run.ps1 --version


  formatting:

    strategy:
      matrix:
        os-version: [ubuntu-latest]
        python-version: [3.11]

    runs-on: ${{ matrix.os-version }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black
    - name: Check if formatting is ok
      run: |
        black --check src
        black --check setup.py
        black --check tests


  examples:

    strategy:
      matrix:
        os-version: [ubuntu-latest]
        python-version: [3.11]

    runs-on: ${{ matrix.os-version }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Check if examples can be created without errors
      run: |
        ls -lt examples
        ./examples/run_examples.sh
        ls -lt examples


  tests:

    strategy:
      matrix:
        os-version: [ubuntu-latest]
        python-version: [3.11]

    runs-on: ${{ matrix.os-version }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Check if tests can be ran without errors
      run: |
        ./tests/run_tests.sh


  package:

    strategy:
      matrix:
        os-version: [ubuntu-latest]
        python-version: [3.11]

    runs-on: ${{ matrix.os-version }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Create Python package
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade build
        python -m build
        ls -lt dist
    - name: Install Python package
      run: |
        pip install "dist/$(ls dist | grep .*.whl)"
    - name: Test if Python package installation was successful
      run: |
        md2anki --version
        md2anki --help
        md2anki "examples/basic_example.md"
        md2anki "examples/images_example.md" -file-dir "examples/"
    - name: Create checksums for the Python package files
      run: |
        sha256sum "$(ls | grep .*.tar.gz)" > "checksums_sha256.txt"
        sha256sum "$(ls | grep .*.whl)" >> "checksums_sha256.txt"
        cat "checksums_sha256.txt"
      working-directory: dist
    - name: Archive package files
      uses: actions/upload-artifact@v3
      with:
        name: Python package files
        path: |
          dist/**/*.tar.gz
          dist/**/*.whl
          dist/checksums_sha256.txt
        retention-days: 7
